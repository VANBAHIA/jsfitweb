import api from './axiosConfig';

/**
 * Service para gerenciamento de Matr√≠culas
 * Endpoints: /api/matriculas
 */
export const matriculasService = {
  /**
   * Lista todas as matr√≠culas
   */
  listarTodos: async (params = {}) => {
    try {
      const response = await api.get('/matriculas', { params });
      return response.data;
    } catch (error) {
      console.error('‚ùå Erro ao listar matr√≠culas:', error);
      throw error;
    }
  },

  /**
   * Busca uma matr√≠cula por ID
   */
  buscarPorId: async (id) => {
    try {
      if (!id) throw new Error('ID da matr√≠cula √© obrigat√≥rio');
      const response = await api.get(`/matriculas/${id}`);
      return { data: response.data };
    } catch (error) {
      console.error(`‚ùå Erro ao buscar matr√≠cula ${id}:`, error);
      throw error;
    }
  },

  /**
   * Cria uma nova matr√≠cula
   */
  criar: async (dados) => {
    try {
      if (!dados.alunoId) throw new Error('Aluno √© obrigat√≥rio');
      if (!dados.planoId) throw new Error('Plano √© obrigat√≥rio');
      if (!dados.dataInicio) throw new Error('Data de in√≠cio √© obrigat√≥ria');

      const response = await api.post('/matriculas', dados);
      return response.data;
    } catch (error) {
      console.error('‚ùå Erro ao criar matr√≠cula:', error);
      throw error;
    }
  },

  /**
   * Atualiza uma matr√≠cula existente
   */
  atualizar: async (id, dados) => {
    try {
      if (!id) throw new Error('ID da matr√≠cula √© obrigat√≥rio');
      const response = await api.put(`/matriculas/${id}`, dados);
      return response.data;
    } catch (error) {
      console.error(`‚ùå Erro ao atualizar matr√≠cula ${id}:`, error);
      throw error;
    }
  },

  /**
   * Inativa uma matr√≠cula
   */
  inativar: async (id, motivo) => {
    try {
      if (!id) throw new Error('ID da matr√≠cula √© obrigat√≥rio');
      const response = await api.patch(`/matriculas/${id}/inativar`, { motivo });
      return response.data;
    } catch (error) {
      console.error(`‚ùå Erro ao inativar matr√≠cula ${id}:`, error);
      throw error;
    }
  },

  /**
   * Reativa uma matr√≠cula
   */
  reativar: async (id) => {
    try {
      if (!id) throw new Error('ID da matr√≠cula √© obrigat√≥rio');
      const response = await api.patch(`/matriculas/${id}/reativar`);
      return response.data;
    } catch (error) {
      console.error(`‚ùå Erro ao reativar matr√≠cula ${id}:`, error);
      throw error;
    }
  },

  /**
   * Exclui uma matr√≠cula
   */
/**
 * Exclui uma matr√≠cula
 */
excluir: async (id) => {
  try {
    if (!id) {
      throw new Error('ID da matr√≠cula √© obrigat√≥rio');
    }
    
    console.log(`üóëÔ∏è Enviando solicita√ß√£o de exclus√£o para ID: ${id}`);
    
    const response = await api.delete(`/matriculas/${id}`);
    
    console.log('‚úÖ Resposta da exclus√£o:', response.data);
    
    return response.data;
    
  } catch (error) {
    console.error(`‚ùå Erro ao excluir matr√≠cula ${id}:`, {
      status: error.response?.status,
      mensagem: error.response?.data?.message,
      erro: error.message
    });
    throw error;
  }
},

  /**
   * Lista matr√≠culas por aluno
   */
  listarPorAluno: async (alunoId) => {
    try {
      if (!alunoId) throw new Error('ID do aluno √© obrigat√≥rio');
      const response = await api.get('/matriculas', {
        params: { alunoId }
      });
      return response.data;
    } catch (error) {
      console.error(`‚ùå Erro ao listar matr√≠culas do aluno ${alunoId}:`, error);
      throw error;
    }
  }
};